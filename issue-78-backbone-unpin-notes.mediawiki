== Purpose ==
This branch constitutes an effort to free us from being bound to non-current versions of key infrastructure components that we use.

== Situation overview ==
Soon after backbone 1.0 was released, we tried to upgrade (from 0.9.10) and noticed that a few of our tests failed. Being occupied with demanding development/release issues at the moment, we deferred dealing with this until time allows.

On revisiting the issue, we still see test failures (details below). Investigating whether updating other key components to current versions might resolve compatibility issues underlying the surprising test failures, I've only seen the number of failures increase.  I will next investigate the actual failures, to try to determine the cause, and the best approach to resolving them.

== Current situation details ==

* 2013-10-08

  Identified the .addOne() test failure problem from the backbone
  0.9.10 => 1.0.0 upgrade.  Per the backbone
  [http://backbonejs.org/#changelog Change Log] documentation for the 1.0.0
  version, collection update now does a .set rather than a .reset.

  We are keying our additions on update on seeing a 'reset' event.  No new
  event seems to be replacing it.  The backbone change provides for
  explicitly raising 'reset' on fetch by including it in the options passed
  to fetch.  It looks like the cleanest way to do that is to have an
  application-specific CollectionsBase with a fetch that passes that in to
  the Backbone.Collections.fetch, and extend all our apps collections from
  that base.

* 2013-10-07

  I verified that the below problems happen, identically, with a fresh
  clone of the application.

  (Note for emacs shell buffer users: if your initial `npm install` fails,
  with:

    `npm ERR! cb() never called!`

  try invoking the install and then backing up the cursor, so the commend
  output happens below the cursor. That reliably prevents the failures for
  me.)

* 2013-10-07

  Discovering more benefits that Zepto provides, over jQuery, I am
  refocusing my efforts on upgrading the infrastructure items based on
  Zepto, instead of striving to switch to jQuery.

  Among these reasons:

  * Zepto provides facilities on which we depend, like $.os and $.branch.
    (I've already grabbed that code, but it is something more for us to
    maintain, rather than leaving that to the primary source.)

  * Zepto provides for tap event translation from touchstart, etc.  We
    would have to fill that in.  (I tried incorporating
    [https://github.com/ftlabs/fastclick fastclick], but it looks like we
    will need something like Zepto's [https://github.com/madrobby/zepto/blob/c81da65302ede8efb4c2ca1549bcb38891b873b9/src/touch.js#L59 touchstart binding]
    and ancillary code, to trigger from the event, in the first place.

  * Tommy reports that the Zepto animate() command uses CSS transitions
    whereas the jQuery animate() command uses setTimeout() animation on CSS
    properties. This is FAR slower on mobile than CSS transitions.

  So, I need to determine whether Zepto is a reliable choice, going
  forward, by examining the errors more closely, and pursue Zepto if it
  looks like a good prospect.

  Towards this end, I'm moving what has been issue-79-unpin-backbone to
  issue-79-unpin-backbone-with-jquery, and will restart
  issue-79-unpin-backbone fresh from the master, cherry picking stuff that
  goes towards Zepto.

* 2013-10-04

  Reduced number of errors to 9, while still using jQuery instead of
  Zepto, by unpinning chai, sinon, sinon-chai, and chai-jquery. 

  * Resulting versions:

    * chai: 1.8.0
    * chai-jquery: 1.1.2
    * sinon: 1.7.3
    * sinon-chai: 2.4.0

  * The current versions of the major components:

    * backbone: 1.0.0
    * underscore: 1.5.2
    * jquery: 2.0.3

  I'm including the explicit versions in the npm/bower configuration
  files, to prevent unwelcome surprises.

* 2013-10-03

  * Backbone: we're running 0.9.10, current release is 1.0.0
    Migrating backbone to 1.0.0 yields 5 test errors, all having the error
    message:

      expected spy to have been called at least once, but it was never called

    It looks like the common feature is that the spies are on functions
    that are triggered by events. I have to confirm that holds for each of
    the cases:

    1. DevicesView Instantiation Methods should call addOne
    2. FilesView Instantiation Methods should call addOne
    3. FilesView Instantiation List items should fire a "complete" event
       when all items added
    4. FoldersView Instantiation Methods should call addOne
    5. FoldersView Instantiation List items should fire a "complete" event  
       when all items added

  * mocha: we're running 1.8.1, but there are  
    [https://github.com/metaskills/mocha-phantomjs/issues/73 known
    problems] with advancing past 1.9, that seem to hold for our situation.

    Trying to do this update, in addition to backbone update, yields 21
    test failures.
  * zepto: we're running v1.0rc1, while full 1.0 is available. However,
    upgrading to 1.0 increases the 5 test failures of the backbone-alone
    update to something like 15 test failures.

    An interesting wrinkle, here, is that we have reasons to migrate from
    Zepto to jQuery, anyway. Trying to upgrade to the most recent full
    jQuery release (2.0.3) yields 58 test failures.

    * Backbone with Zepto precludes using backbone's router.  We're using
      backstack to cover some of that functionality, and being explicit
      about how we dispatch to our collections and models, in general.
    * Zepto does not support IE, which we may want to do eventually.

    Zepto provides a couple of features that we will have to supplement
    to have with jQuery:

    * $.os and $.browser - we depend on these. I am going to copy the code
      from Zepto.
    * fastclick - circumventing tap delays that result from waiting to detect
      double-click is built into Zepto. We can get it from
      https://github.com/ftlabs/fastclick

